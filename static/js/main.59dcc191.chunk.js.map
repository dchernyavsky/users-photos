{"version":3,"sources":["components/User/User.module.css","common/styles/Container.module.css","components/Photo/PhotoPreview.module.css","components/Album/Album.module.css","components/Header/Header.module.css","store/loading-reducer.ts","api/api.ts","store/users-reducer.ts","store/albums-reducer.ts","components/User/User.tsx","components/Preloader/Preloader.tsx","components/User/UsersContainer.tsx","components/Album/Album.tsx","store/photos-reducer.ts","components/Album/AlbumsContainer.tsx","store/photo-reducer.ts","components/Photo/PhotoPreview.tsx","components/Photo/PhotosPreviewContainer.tsx","components/Header/Header.tsx","components/Photo/Photo.tsx","components/Photo/PhotoContainer.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","ACTION_TYPES","axiosInstance","axios","create","baseURL","withCredentials","usersAPI","get","albumsAPI","userId","photosAPI","albumId","photoId","initialState","isFetching","setIsFetching","type","SET_IS_FETCHING","payload","getUsers","dispatch","then","res","users","data","SET_USERS","catch","rej","console","log","finally","User","props","className","style","user","username","name","Preloader","UsersContainer","useDispatch","useSelector","state","loading","useEffect","styles","title","containerStyle","container","map","to","id","Album","album","getAlbums","SET_ALBUMS","AlbumsContainer","useParams","albums","getPhotos","SET_PHOTOS","PhotoPreview","photo","thumbnailUrl","photoPreview","src","alt","PhotosPreviewContainer","photos","Header","getPhoto","SET_PHOTO","Photo","url","App","path","component","PhotoContainer","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59dcc191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"User_title__2zSuU\",\"user\":\"User_user__2tMsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3G61F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoPreview\":\"PhotoPreview_photoPreview__1YbBn\",\"photo\":\"PhotoPreview_photo__2hOks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album\":\"Album_album__1REYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2oX62\"};","import {LoadingType} from '../types/entities'\r\n\r\nexport enum ACTION_TYPES {\r\n  SET_IS_FETCHING = 'IS_FETCHING/SET_IS_FETCHING'\r\n}\r\n\r\ntype SetIsFetchingActionType = ReturnType<typeof setIsFetching>\r\n\r\nexport type ActionsTypes = SetIsFetchingActionType\r\n\r\nconst initialState: LoadingType = {\r\n  isFetching: true\r\n}\r\n\r\nexport const loadingReducer = (state: LoadingType = initialState, action: ActionsTypes): LoadingType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_IS_FETCHING: {\r\n      return {...state, ...action.payload}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setIsFetching = (isFetching: boolean) => ({\r\n  type: ACTION_TYPES.SET_IS_FETCHING,\r\n  payload: {isFetching}\r\n})","import axios from 'axios'\r\nimport {AlbumType, PhotoType, UserType} from '../types/entities'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com/',\r\n  withCredentials: true\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers() {\r\n    return axiosInstance.get<Array<UserType>>('users')\r\n  }\r\n}\r\n\r\nexport const albumsAPI = {\r\n  getAlbums(userId: string) {\r\n    return axiosInstance.get<Array<AlbumType>>(`albums?userId=${userId}`)\r\n  }\r\n}\r\n\r\nexport const photosAPI = {\r\n  getPhotos(albumId: string) {\r\n    return axiosInstance.get<Array<PhotoType>>(`photos?albumId=${albumId}`)\r\n  },\r\n  getPhoto(photoId: string) {\r\n    return axiosInstance.get<PhotoType>(`photos/${photoId}`)\r\n  }\r\n}","import {UserType} from '../types/entities'\r\nimport {usersAPI} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\nimport {setIsFetching} from './loading-reducer'\r\n\r\nexport enum ACTION_TYPES {\r\n  SET_USERS = 'USERS/SET_USERS'\r\n}\r\n\r\ntype SetUsersActionType = ReturnType<typeof setUsers>\r\n\r\nexport type ActionsTypes = SetUsersActionType\r\n\r\nconst initialState = [] as Array<UserType>\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_USERS: {\r\n      return [...action.payload]\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>) => ({\r\n  type: ACTION_TYPES.SET_USERS,\r\n  payload: users\r\n})\r\n\r\nexport const getUsers = () => (dispatch: Dispatch<any>) => {\r\n  dispatch(setIsFetching(true))\r\n  usersAPI.getUsers()\r\n    .then(res => dispatch(setUsers(res.data)))\r\n    .catch(rej => console.log(rej))\r\n    .finally(() => dispatch(setIsFetching(false)))\r\n}","import {AlbumType} from '../types/entities'\r\nimport {albumsAPI} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\nimport {setIsFetching} from './loading-reducer'\r\n\r\nexport enum ACTION_TYPES {\r\n  SET_ALBUMS = 'ALBUMS/SET_ALBUMS'\r\n}\r\n\r\ntype SetAlbumsActionType = ReturnType<typeof setAlbums>\r\n\r\nexport type ActionsTypes = SetAlbumsActionType\r\n\r\nconst initialState = [] as Array<AlbumType>\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const albumsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_ALBUMS: {\r\n      return [...action.payload]\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setAlbums = (users: Array<AlbumType>) => ({\r\n  type: ACTION_TYPES.SET_ALBUMS,\r\n  payload: users\r\n})\r\n\r\nexport const getAlbums = (userId: string) => (dispatch: Dispatch<any>) => {\r\n  dispatch(setIsFetching(true))\r\n  albumsAPI.getAlbums(userId)\r\n    .then(res => {\r\n      dispatch(setAlbums(res.data))\r\n    })\r\n    .catch(rej => console.log(rej))\r\n    .finally(() => dispatch(setIsFetching(false)))\r\n}","import React, {FunctionComponent} from 'react'\r\nimport {UserType} from '../../types/entities'\r\nimport style from './User.module.css'\r\n\r\ninterface OwnProps {\r\n  user: UserType\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst User: FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <div className={style.user}>\r\n      <h2>{props.user.username}</h2>\r\n      <div>{props.user.name}</div>\r\n    </div>)\r\n}\r\n\r\nexport default User","import React, { FunctionComponent } from 'react';\r\n\r\nconst Preloader: FunctionComponent = () => {\r\n\r\n  return (<h2>Loading...</h2>);\r\n};\r\n\r\nexport default Preloader;\r\n","import React, {useEffect} from 'react'\r\nimport {getUsers} from '../../store/users-reducer'\r\nimport User from './User'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../store/store'\r\nimport {UserType} from '../../types/entities'\r\nimport containerStyle from '../../common/styles/Container.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport styles from './User.module.css'\r\n\r\nconst UsersContainer = () => {\r\n  const dispatch = useDispatch()\r\n  const isFetching = useSelector<StateType, boolean>(state => state.loading.isFetching)\r\n  const users = useSelector<StateType, Array<UserType>>(state => state.users)\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers())\r\n  }, [dispatch])\r\n\r\n  return (<>\r\n    <h2 className={styles.title}>Select User:</h2>\r\n    <div className={containerStyle.container}>\r\n\r\n      {\r\n        isFetching\r\n          ? <Preloader/>\r\n          : users.map(user => {\r\n            return <NavLink\r\n              key={user.id}\r\n              to={`/albums/${user.id}`}\r\n            >\r\n              <User\r\n                user={user}\r\n              />\r\n            </NavLink>\r\n          })\r\n      }\r\n    </div>\r\n  </>)\r\n}\r\n\r\nexport default UsersContainer\r\n\r\n\r\n\r\n","import React, {FunctionComponent} from 'react'\r\nimport {AlbumType} from '../../types/entities'\r\nimport style from './Album.module.css'\r\n\r\ninterface OwnProps {\r\n  album: AlbumType\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst Album: FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <div className={style.album}>\r\n      <h2>{props.album.title}</h2>\r\n    </div>)\r\n}\r\n\r\nexport default Album","import {PhotoType} from '../types/entities'\r\nimport {photosAPI} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\nimport {setIsFetching} from './loading-reducer'\r\n\r\nexport enum ACTION_TYPES {\r\n  SET_PHOTOS = 'PHOTOS/SET_PHOTOS'\r\n}\r\n\r\ntype SetPhotosActionType = ReturnType<typeof setPhotos>\r\n\r\nexport type ActionsTypes = SetPhotosActionType\r\n\r\nconst initialState = [] as Array<PhotoType>\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const photosReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_PHOTOS: {\r\n      return [...action.payload]\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setPhotos = (users: Array<PhotoType>) => ({\r\n  type: ACTION_TYPES.SET_PHOTOS,\r\n  payload: users\r\n})\r\n\r\nexport const getPhotos = (albumId: string) => (dispatch: Dispatch<any>) => {\r\n  dispatch(setIsFetching(true))\r\n  photosAPI.getPhotos(albumId)\r\n    .then(res => dispatch(setPhotos(res.data)))\r\n    .catch(rej => console.log(rej))\r\n    .finally(() => dispatch(setIsFetching(false)))\r\n}","import React, {FunctionComponent, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../store/store'\r\nimport {AlbumType} from '../../types/entities'\r\nimport containerStyle from '../../common/styles/Container.module.css'\r\nimport Album from './Album'\r\nimport {getAlbums} from '../../store/albums-reducer'\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport styles from '../User/User.module.css'\r\n\r\nconst AlbumsContainer: FunctionComponent = () => {\r\n  const userId = useParams<{ userId: string }>()\r\n  const isFetching = useSelector<StateType, boolean>(state => state.loading.isFetching)\r\n  const dispatch = useDispatch()\r\n  const albums = useSelector<StateType, Array<AlbumType>>(state => state.albums)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAlbums(userId.userId))\r\n  }, [dispatch, userId.userId])\r\n\r\n  return (<>\r\n    <h2 className={styles.title}>Select Album:</h2>\r\n    <div className={containerStyle.container}>\r\n      {\r\n        isFetching\r\n          ? <Preloader/>\r\n          : albums.map(album => {\r\n            return <NavLink\r\n              to={`/photos/${album.id}`}\r\n              key={album.id}\r\n            >\r\n              <Album album={album}/>\r\n            </NavLink>\r\n          })\r\n      }\r\n    </div>\r\n  </>)\r\n}\r\n\r\nexport default AlbumsContainer\r\n","import {PhotoType} from '../types/entities'\r\nimport {photosAPI} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\nimport {setIsFetching} from './loading-reducer'\r\n\r\nexport enum ACTION_TYPES {\r\n  SET_PHOTO = 'PHOTO/SET_PHOTO'\r\n}\r\n\r\ntype SetPhotoActionType = ReturnType<typeof setPhoto>\r\n\r\nexport type ActionsTypes = SetPhotoActionType\r\n\r\nconst initialState = {} as PhotoType\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const photoReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_PHOTO: {\r\n      return {...state, ...action.payload.photo}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setPhoto = (photo: PhotoType) => ({\r\n  type: ACTION_TYPES.SET_PHOTO,\r\n  payload: {photo}\r\n})\r\n\r\nexport const getPhoto = (photoId: string) => (dispatch: Dispatch<any>) => {\r\n  dispatch(setIsFetching(true))\r\n  photosAPI.getPhoto(photoId)\r\n    .then(res => dispatch(setPhoto(res.data)))\r\n    .catch(rej => console.log(rej))\r\n    .finally(() => dispatch(setIsFetching(false)))\r\n}","import React, {FunctionComponent} from 'react'\r\nimport {PhotoType} from '../../types/entities'\r\nimport style from './PhotoPreview.module.css'\r\n\r\ninterface OwnProps {\r\n  photo: PhotoType\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst PhotoPreview: FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <div className={style.photo}>\r\n      <h4>{props.photo.title}</h4>\r\n      {props.photo.thumbnailUrl && <img className={style.photoPreview} src={props.photo.thumbnailUrl} alt=''/>}\r\n    </div>)\r\n}\r\n\r\nexport default PhotoPreview","import React, {useEffect} from 'react'\r\nimport {getPhotos} from '../../store/photos-reducer'\r\nimport PhotoPreview from './PhotoPreview'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../store/store'\r\nimport {PhotoType} from '../../types/entities'\r\nimport containerStyle from '../../common/styles/Container.module.css'\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport styles from '../User/User.module.css'\r\n\r\nconst PhotosPreviewContainer = () => {\r\n  const albumId = useParams<{ albumId: string }>()\r\n  const isFetching = useSelector<StateType, boolean>(state => state.loading.isFetching)\r\n  const dispatch = useDispatch()\r\n  const photos = useSelector<StateType, Array<PhotoType>>(state => state.photos)\r\n\r\n  useEffect(() => {\r\n    dispatch(getPhotos(albumId.albumId))\r\n  }, [dispatch, albumId.albumId])\r\n\r\n  return (<>\r\n    <h2 className={styles.title}>Select Photo:</h2>\r\n    <div className={containerStyle.container}>\r\n      {\r\n        isFetching\r\n          ? <Preloader/>\r\n          : photos.map(photo => {\r\n            return (\r\n              <NavLink key={photo.id} to={`../photo/${photo.id}`}>\r\n                <PhotoPreview photo={photo}/>\r\n              </NavLink>\r\n            )\r\n          })\r\n      }\r\n    </div>\r\n  </>)\r\n}\r\n\r\nexport default PhotosPreviewContainer\r\n\r\n\r\n\r\n","import React, {FunctionComponent} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport containerStyle from '../../common/styles/Container.module.css'\r\nimport style from './Header.module.css'\r\n\r\nconst Header: FunctionComponent = () => {\r\n\r\n  return (<NavLink to='/'>\r\n    <div className={`${containerStyle.container} ${style.container}`}>\r\n      <h1>\r\n        User Photos Viewer\r\n      </h1>\r\n    </div>\r\n\r\n  </NavLink>)\r\n}\r\n\r\nexport default Header\r\n","import React, {FunctionComponent} from 'react'\r\nimport {PhotoType} from '../../types/entities'\r\n\r\ninterface OwnProps {\r\n  photo: PhotoType\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst Photo: FunctionComponent<Props> = (props) => {\r\n  return (<div>\r\n      {\r\n        props.photo.url && <img src={props.photo.url} alt=\"\"/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photo\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../store/store'\r\nimport {PhotoType} from '../../types/entities'\r\nimport containerStyle from '../../common/styles/Container.module.css'\r\nimport {useParams} from 'react-router-dom'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport styles from '../User/User.module.css'\r\nimport {getPhoto} from '../../store/photo-reducer'\r\nimport Photo from './Photo'\r\n\r\nconst PhotosPreviewContainer = () => {\r\n  const photoId = useParams<{ photoId: string }>()\r\n  const isFetching = useSelector<StateType, boolean>(state => state.loading.isFetching)\r\n  const dispatch = useDispatch()\r\n  const photo = useSelector<StateType, PhotoType>(state => state.photo)\r\n\r\n  useEffect(() => {\r\n    dispatch(getPhoto(photoId.photoId))\r\n  }, [dispatch, photoId.photoId])\r\n\r\n  return (<>\r\n    <h2 className={styles.title}>{photo.title}</h2>\r\n    <div className={containerStyle.container}>\r\n      {\r\n        isFetching\r\n          ? <Preloader/>\r\n          : <Photo photo={photo}/>\r\n      }\r\n    </div>\r\n  </>)\r\n}\r\n\r\nexport default PhotosPreviewContainer\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './App.css'\r\nimport UsersContainer from './components/User/UsersContainer'\r\nimport {HashRouter, Redirect, Route} from 'react-router-dom'\r\nimport AlbumsContainer from './components/Album/AlbumsContainer'\r\nimport PhotosPreviewContainer from './components/Photo/PhotosPreviewContainer'\r\nimport Header from './components/Header/Header'\r\nimport PhotoContainer from './components/Photo/PhotoContainer'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <Header/>\r\n        <Route\r\n          path='/users'\r\n          component={UsersContainer}\r\n        />\r\n        <Route\r\n          path='/albums/:userId?'\r\n          component={AlbumsContainer}\r\n        />\r\n        <Route\r\n          path='/photos/:albumId?'\r\n          component={PhotosPreviewContainer}\r\n        />\r\n        <Route\r\n          path='/photo/:photoId?'\r\n          component={PhotoContainer}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n        >\r\n          <Redirect to=\"/users\"/>\r\n        </Route>\r\n      </ HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {usersReducer} from './users-reducer'\r\nimport {albumsReducer} from './albums-reducer'\r\nimport {photosReducer} from './photos-reducer'\r\nimport {loadingReducer} from './loading-reducer'\r\nimport {photoReducer} from './photo-reducer'\r\n\r\nconst reducer = combineReducers({\r\n  users: usersReducer,\r\n  albums: albumsReducer,\r\n  photos: photosReducer,\r\n  photo: photoReducer,\r\n  loading: loadingReducer\r\n})\r\n\r\nexport type StateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}